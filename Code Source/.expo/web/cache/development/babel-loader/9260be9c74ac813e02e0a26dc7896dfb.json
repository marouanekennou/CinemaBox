{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\XPS\\\\Desktop\\\\Projet_Mobile\\\\MoviesAndMe\\\\Components\\\\FilmList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport FilmItem from \"./FilmItem\";\nimport { connect } from 'react-redux';\n\nvar FilmList = function (_React$Component) {\n  _inherits(FilmList, _React$Component);\n\n  var _super = _createSuper(FilmList);\n\n  function FilmList(props) {\n    var _this;\n\n    _classCallCheck(this, FilmList);\n\n    _this = _super.call(this, props);\n\n    _this._displayDetailForFilm = function (idFilm) {\n      _this.props.navigation.navigate(\"FilmDetail\", {\n        idFilm: idFilm\n      });\n    };\n\n    _this.state = {\n      films: []\n    };\n    return _this;\n  }\n\n  _createClass(FilmList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(FlatList, {\n        data: this.props.films,\n        extraData: this.props.favoritesFilm,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(FilmItem, {\n            film: item,\n            isFilmFavorite: _this2.props.favoritesFilm.findIndex(function (film) {\n              return film.id === item.id;\n            }) !== -1 ? true : false,\n            displayDetailForFilm: _this2._displayDetailForFilm,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 11\n            }\n          });\n        },\n        onEndReachedThreshold: 0.5,\n        onEndReached: function onEndReached() {\n          if (_this2.props.page < _this2.props.total_pages) {\n            _this2._loadFilms();\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return FilmList;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  list: {\n    flex: 1\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    favoritesFilm: state.favoritesFilm\n  };\n};\n\nexport default connect(mapStateToProps)(FilmList);","map":{"version":3,"sources":["C:/Users/XPS/Desktop/Projet_Mobile/MoviesAndMe/Components/FilmList.js"],"names":["React","FilmItem","connect","FilmList","props","_displayDetailForFilm","idFilm","navigation","navigate","state","films","favoritesFilm","item","id","toString","findIndex","film","page","total_pages","_loadFilms","Component","styles","StyleSheet","create","list","flex","mapStateToProps"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,QAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;;AADgB,UAMlBC,qBANkB,GAMM,UAACC,MAAD,EAAY;AAClC,YAAKF,KAAL,CAAWG,UAAX,CAAsBC,QAAtB,CAA+B,YAA/B,EAA6C;AAACF,QAAAA,MAAM,EAACA;AAAR,OAA7C;AACD,KARiB;;AAEhB,UAAKG,KAAL,GAAW;AACTC,MAAAA,KAAK,EAAE;AADE,KAAX;AAFgB;AAKjB;;;;6BAKO;AAAA;;AACN,aACE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAE,KAAKN,KAAL,CAAWM,KADnB;AAEE,QAAA,SAAS,EAAE,KAAKN,KAAL,CAAWO,aAFxB;AAGE,QAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,iBAAUA,IAAI,CAACC,EAAL,CAAQC,QAAR,EAAV;AAAA,SAHhB;AAIE,QAAA,UAAU,EAAE;AAAA,cAAEF,IAAF,QAAEA,IAAF;AAAA,iBACV,oBAAC,QAAD;AACE,YAAA,IAAI,EAAEA,IADR;AAEE,YAAA,cAAc,EAAK,MAAI,CAACR,KAAL,CAAWO,aAAX,CAAyBI,SAAzB,CAAmC,UAAAC,IAAI;AAAA,qBAAGA,IAAI,CAACH,EAAL,KAAYD,IAAI,CAACC,EAApB;AAAA,aAAvC,MAAmE,CAAC,CAArE,GAA0E,IAA1E,GAAiF,KAFrG;AAGE,YAAA,oBAAoB,EAAI,MAAI,CAACR,qBAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADU;AAAA,SAJd;AAUE,QAAA,qBAAqB,EAAI,GAV3B;AAWE,QAAA,YAAY,EAAE,wBAAK;AACjB,cAAI,MAAI,CAACD,KAAL,CAAWa,IAAX,GAAkB,MAAI,CAACb,KAAL,CAAWc,WAAjC,EAA8C;AAC5C,YAAA,MAAI,CAACC,UAAL;AACD;AACF,SAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAmBD;;;;EA/BoBnB,KAAK,CAACoB,S;;AAkC7B,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAC;AACHC,IAAAA,IAAI,EAAE;AADH;AAD0B,CAAlB,CAAf;;AAMA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACjB,KAAD,EAAU;AAChC,SAAO;AACLE,IAAAA,aAAa,EAAGF,KAAK,CAACE;AADjB,GAAP;AAGD,CAJD;;AAMA,eAAeT,OAAO,CAACwB,eAAD,CAAP,CAAyBvB,QAAzB,CAAf","sourcesContent":["import React from 'react'\r\nimport {StyleSheet,FlatList} from 'react-native'\r\nimport FilmItem from './FilmItem'\r\nimport {connect} from 'react-redux'\r\n\r\nclass FilmList extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      films: []\r\n    }\r\n  }\r\n  _displayDetailForFilm = (idFilm) => {\r\n    this.props.navigation.navigate(\"FilmDetail\", {idFilm:idFilm})\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <FlatList\r\n        data={this.props.films}\r\n        extraData={this.props.favoritesFilm}\r\n        keyExtractor={(item) => item.id.toString()}\r\n        renderItem={({item}) =>\r\n          <FilmItem\r\n            film={item}\r\n            isFilmFavorite = {(this.props.favoritesFilm.findIndex(film=> film.id === item.id) !== -1) ? true : false}\r\n            displayDetailForFilm = {this._displayDetailForFilm}\r\n          />}\r\n        onEndReachedThreshold = {0.5}\r\n        onEndReached={()=> {\r\n          if (this.props.page < this.props.total_pages) {\r\n            this._loadFilms()\r\n          }\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  list:{\r\n    flex: 1\r\n  }\r\n})\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n    favoritesFilm : state.favoritesFilm\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(FilmList)\r\n"]},"metadata":{},"sourceType":"module"}