{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\XPS\\\\Desktop\\\\Projet_Mobile\\\\MoviesAndMe\\\\Components\\\\FilmItem.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { getImageFromApi } from \"../API/TMDBApi\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FadeIn from \"../Animations/FadeIn\";\n\nvar FilmItem = function (_React$Component) {\n  _inherits(FilmItem, _React$Component);\n\n  var _super = _createSuper(FilmItem);\n\n  function FilmItem() {\n    _classCallCheck(this, FilmItem);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FilmItem, [{\n    key: \"_displayFavoriteImage\",\n    value: function _displayFavoriteImage() {\n      if (this.props.isFilmFavorite == true) {\n        return React.createElement(Image, {\n          source: require(\"../Images/ic_favorite.png\"),\n          style: styles.favorite_image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 9\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          film = _this$props.film,\n          displayDetailForFilm = _this$props.displayDetailForFilm,\n          isFilmFavorite = _this$props.isFilmFavorite;\n      return React.createElement(FadeIn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.main_container,\n        onPress: function onPress() {\n          return displayDetailForFilm(film.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: getImageFromApi(film.poster_path)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: styles.content_container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.header_container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, this._displayFavoriteImage(), React.createElement(Text, {\n        style: styles.title_text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }\n      }, film.title), React.createElement(Text, {\n        style: styles.vote_text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }\n      }, film.vote_average)), React.createElement(View, {\n        style: styles.description_container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.description_text,\n        numberOfLines: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }\n      }, film.overview)), React.createElement(View, {\n        style: styles.date_container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.date_text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }, film.release_date)))));\n    }\n  }]);\n\n  return FilmItem;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  favorite_image: {\n    width: 20,\n    height: 20,\n    marginRight: 5\n  },\n  main_container: {\n    height: 190,\n    flexDirection: 'row'\n  },\n  image: {\n    width: 120,\n    height: 180,\n    margin: 5,\n    backgroundColor: 'gray'\n  },\n  content_container: {\n    flex: 1,\n    margin: 5\n  },\n  header_container: {\n    flex: 3,\n    flexDirection: 'row'\n  },\n  title_text: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    flex: 1,\n    flexWrap: 'wrap',\n    paddingRight: 10\n  },\n  vote_text: {\n    fontWeight: 'bold',\n    fontSize: 26,\n    color: '#666666'\n  },\n  description_container: {\n    flex: 7\n  },\n  description_text: {\n    fontStyle: 'italic',\n    color: '#666666'\n  },\n  date_container: {\n    flex: 1\n  },\n  date_text: {\n    textAlign: 'right',\n    fontSize: 14\n  }\n});\nexport default FilmItem;","map":{"version":3,"sources":["C:/Users/XPS/Desktop/Projet_Mobile/MoviesAndMe/Components/FilmItem.js"],"names":["React","getImageFromApi","FadeIn","FilmItem","props","isFilmFavorite","require","styles","favorite_image","film","displayDetailForFilm","main_container","id","image","uri","poster_path","content_container","header_container","_displayFavoriteImage","title_text","title","vote_text","vote_average","description_container","description_text","overview","date_container","date_text","release_date","Component","StyleSheet","create","width","height","marginRight","flexDirection","margin","backgroundColor","flex","fontWeight","fontSize","flexWrap","paddingRight","color","fontStyle","textAlign"],"mappings":"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","sourcesContent":["\r\nimport React from 'react'\r\nimport {getImageFromApi} from '../API/TMDBApi'\r\nimport { StyleSheet, View, Text, Image, TouchableOpacity} from 'react-native'\r\nimport FadeIn from '../Animations/FadeIn'\r\n\r\nclass FilmItem extends React.Component {\r\n  _displayFavoriteImage(){\r\n    if(this.props.isFilmFavorite==true){\r\n      return(\r\n        <Image\r\n          source={require('../Images/ic_favorite.png')}\r\n          style={styles.favorite_image}\r\n        />\r\n      )\r\n    }\r\n  }\r\n  render() {\r\n    const {film, displayDetailForFilm, isFilmFavorite} = this.props\r\n    return (\r\n      <FadeIn>\r\n        <TouchableOpacity style={styles.main_container} onPress={()=> displayDetailForFilm(film.id)}>\r\n          <Image\r\n            style={styles.image}\r\n            source={{uri: getImageFromApi(film.poster_path)}}\r\n          />\r\n          <View style={styles.content_container}>\r\n            <View style={styles.header_container}>\r\n              {this._displayFavoriteImage()}\r\n              <Text style={styles.title_text}>{film.title}</Text>\r\n              <Text style={styles.vote_text}>{film.vote_average}</Text>\r\n            </View>\r\n            <View style={styles.description_container}>\r\n              <Text style={styles.description_text} numberOfLines={6}>{film.overview}</Text>\r\n            </View>\r\n            <View style={styles.date_container}>\r\n              <Text style={styles.date_text}>{film.release_date}</Text>\r\n            </View>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </FadeIn>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  favorite_image:{\r\n    width:20,\r\n    height:20,\r\n    marginRight : 5\r\n  },\r\n  main_container: {\r\n    height: 190,\r\n    flexDirection: 'row'\r\n  },\r\n  image: {\r\n    width: 120,\r\n    height: 180,\r\n    margin: 5,\r\n    backgroundColor: 'gray'\r\n  },\r\n  content_container: {\r\n    flex: 1,\r\n    margin: 5\r\n  },\r\n  header_container: {\r\n    flex: 3,\r\n    flexDirection: 'row'\r\n  },\r\n  title_text: {\r\n    fontWeight: 'bold',\r\n    fontSize: 20,\r\n    flex: 1,\r\n    flexWrap: 'wrap',\r\n    paddingRight: 10\r\n  },\r\n  vote_text: {\r\n    fontWeight: 'bold',\r\n    fontSize: 26,\r\n    color: '#666666'\r\n  },\r\n  description_container: {\r\n    flex: 7\r\n  },\r\n  description_text: {\r\n    fontStyle: 'italic',\r\n    color: '#666666'\r\n  },\r\n  date_container: {\r\n    flex: 1\r\n  },\r\n  date_text: {\r\n    textAlign: 'right',\r\n    fontSize: 14\r\n  }\r\n})\r\nexport default FilmItem\r\n"]},"metadata":{},"sourceType":"module"}