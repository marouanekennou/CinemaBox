{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\XPS\\\\Desktop\\\\Projet_Mobile\\\\MoviesAndMe\\\\Components\\\\FilmDetail.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { getFilmDetailFromApi, getImageFromApi } from \"../API/TMDBApi\";\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport { connect } from 'react-redux';\nimport EnlargeShrink from \"../Animations/EnlargeShrink\";\n\nvar FilmDetail = function (_React$Component) {\n  _inherits(FilmDetail, _React$Component);\n\n  var _super = _createSuper(FilmDetail);\n\n  function FilmDetail(props) {\n    var _this;\n\n    _classCallCheck(this, FilmDetail);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      film: undefined,\n      isLoading: true\n    };\n    _this._shareFilm = _this._shareFilm.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FilmDetail, [{\n    key: \"_toggleFavorite\",\n    value: function _toggleFavorite() {\n      var action = {\n        type: \"TOGGLE_FAVORITE\",\n        value: this.state.film\n      };\n      this.props.dispatch(action);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var favoriteFilmIndex = this.props.favoritesFilm.findIndex(function (item) {\n        return item.id === _this2.props.navigation.state.params.idFilm;\n      });\n\n      if (favoriteFilmIndex !== -1) {\n        this.setState({\n          film: this.props.favoritesFilm[favoriteFilmIndex],\n          isLoading: false\n        }, function () {\n          _this2._updateNavigationParams();\n        });\n        return;\n      }\n\n      this.setState({\n        isLoading: true\n      });\n      getFilmDetailFromApi(this.props.navigation.state.params.idFilm).then(function (data) {\n        _this2.setState({\n          film: data,\n          isLoading: false\n        }, function () {\n          _this2._updateNavigationParams();\n        });\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log(\"componentDidUpdate:\");\n      console.log(this.props.favoritesFilm);\n    }\n  }, {\n    key: \"_updateNavigationParams\",\n    value: function _updateNavigationParams() {\n      this.props.navigation.setParams({\n        shareFilm: this._shareFilm,\n        film: this.state.film\n      });\n    }\n  }, {\n    key: \"_shareFilm\",\n    value: function _shareFilm() {\n      var film = this.state.film;\n      Share.share({\n        title: film.title,\n        message: film.overview\n      });\n    }\n  }, {\n    key: \"_displayFloatingActionButton\",\n    value: function _displayFloatingActionButton() {\n      var _this3 = this;\n\n      var film = this.state.film;\n\n      if (film != undefined && Platform.OS === ' android') {\n        return React.createElement(TouchableOpacity, {\n          style: styles.share_touchable_floatingactionbutton,\n          onPress: function onPress() {\n            return _this3._shareFilm();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }\n        }, React.createElement(Image, {\n          style: styles.share_image,\n          source: require(\"../Images/ic_share.png\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"_displayFavoriteImage\",\n    value: function _displayFavoriteImage() {\n      var _this4 = this;\n\n      var sourceImage = require(\"../Images/ic_favorite_border.png\");\n\n      var shouldEnlarge = false;\n\n      if (this.props.favoritesFilm.findIndex(function (item) {\n        return item.id === _this4.state.film.id;\n      }) !== -1) {\n        sourceImage = require(\"../Images/ic_favorite.png\");\n        shouldEnlarge = true;\n      }\n\n      return React.createElement(EnlargeShrink, {\n        shouldEnlarge: shouldEnlarge,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        source: sourceImage,\n        style: styles.favorite_image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"_displayLoading\",\n    value: function _displayLoading() {\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.loading_container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 9\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"_displayFilm\",\n    value: function _displayFilm() {\n      var _this5 = this;\n\n      if (this.state.film != undefined) {\n        return React.createElement(ScrollView, {\n          style: styles.scrollview_container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 9\n          }\n        }, React.createElement(Image, {\n          source: {\n            uri: getImageFromApi(this.state.film.backdrop_path)\n          },\n          style: styles.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }\n        }), React.createElement(Text, {\n          style: styles.title_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }\n        }, this.state.film.title), React.createElement(TouchableOpacity, {\n          style: styles.favorite_container,\n          onPress: function onPress() {\n            return _this5._toggleFavorite();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 11\n          }\n        }, this._displayFavoriteImage()), React.createElement(Text, {\n          style: styles.description_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }\n        }, this.state.film.overview), React.createElement(Text, {\n          style: styles.data_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }\n        }, \"Sortie le \", moment(new Date(this.state.release_date)).format('DD/MM/YYYY')), React.createElement(Text, {\n          style: styles.data_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }\n        }, \"Note: \", this.state.film.vote_average, \"/10\"), React.createElement(Text, {\n          style: styles.data_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }\n        }, \"Nombre de votes: \", this.state.film.vote_count), React.createElement(Text, {\n          style: styles.data_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }\n        }, \"Budget: \", numeral(this.state.film.budget).format('0,0[.]00$'), \" \"), React.createElement(Text, {\n          style: styles.data_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }\n        }, \"Genre(s): \", this.state.film.genres.map(function (genre) {\n          return genre.name;\n        }).join(\" / \")), React.createElement(Text, {\n          style: styles.data_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }\n        }, \"Companie(s): \", this.state.film.production_companies.map(function (companies) {\n          return companies.name;\n        }).join(\" / \")));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.main_container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 7\n        }\n      }, this._displayLoading(), this._displayFilm(), this._displayFloatingActionButton());\n    }\n  }]);\n\n  return FilmDetail;\n}(React.Component);\n\nFilmDetail.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  var params = navigation.state.params;\n\n  if (params.film != undefined && Platform.OS === 'ios') {\n    return {\n      headerRight: React.createElement(TouchableOpacity, {\n        style: styles.share_touchable_headerrightbutton,\n        onPress: function onPress() {\n          return params.shareFilm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 22\n        }\n      }, React.createElement(Image, {\n        style: styles.share_image,\n        source: require(\"../Images/ic_share.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }\n      }))\n    };\n  }\n};\n\nvar styles = StyleSheet.create({\n  share_touchable_headerrightbutton: {\n    marginRight: 8\n  },\n  share_touchable_floatingactionbutton: {\n    position: 'absolute',\n    width: 60,\n    height: 60,\n    right: 30,\n    bottom: 30,\n    borderRadius: 30,\n    backgroundColor: '#e91e63',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  share_image: {\n    height: 30,\n    width: 30\n  },\n  favorite_image: {\n    flex: 1,\n    height: null,\n    width: null\n  },\n  favorite_container: {\n    alignItems: 'center'\n  },\n  image: {\n    height: 180,\n    margin: 5\n  },\n  title_text: {\n    flex: 1,\n    flexWrap: 'wrap',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 30,\n    color: '#000000',\n    margin: 5,\n    marginBottom: 10\n  },\n  description_text: {\n    fontStyle: 'italic',\n    color: '#666666',\n    margin: 5,\n    marginBottom: 10\n  },\n  data_text: {\n    marginLeft: 5,\n    marginRight: 5,\n    marginBottom: 5,\n    fontWeight: 'bold'\n  },\n  scrollview_container: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  loading_container: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  main_container: {\n    flex: 1\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    favoritesFilm: state.favoritesFilm\n  };\n};\n\nexport default connect(mapStateToProps)(FilmDetail);","map":{"version":3,"sources":["C:/Users/XPS/Desktop/Projet_Mobile/MoviesAndMe/Components/FilmDetail.js"],"names":["React","getFilmDetailFromApi","getImageFromApi","moment","numeral","connect","EnlargeShrink","FilmDetail","props","state","film","undefined","isLoading","_shareFilm","bind","action","type","value","dispatch","favoriteFilmIndex","favoritesFilm","findIndex","item","id","navigation","params","idFilm","setState","_updateNavigationParams","then","data","console","log","setParams","shareFilm","Share","share","title","message","overview","Platform","OS","styles","share_touchable_floatingactionbutton","share_image","require","sourceImage","shouldEnlarge","favorite_image","loading_container","scrollview_container","uri","backdrop_path","image","title_text","favorite_container","_toggleFavorite","_displayFavoriteImage","description_text","data_text","Date","release_date","format","vote_average","vote_count","budget","genres","map","genre","name","join","production_companies","companies","main_container","_displayLoading","_displayFilm","_displayFloatingActionButton","Component","navigationOptions","headerRight","share_touchable_headerrightbutton","StyleSheet","create","marginRight","position","width","height","right","bottom","borderRadius","backgroundColor","justifyContent","alignItems","flex","margin","flexWrap","textAlign","fontWeight","fontSize","color","marginBottom","fontStyle","marginLeft","flexDirection","top","left","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Text, View, StyleSheet,ActivityIndicator, ScrollView, Image, TouchableOpacity, Share, Platform} from 'react-native'\r\nimport {getFilmDetailFromApi, getImageFromApi} from '../API/TMDBApi'\r\nimport moment from 'moment'\r\nimport numeral from 'numeral'\r\nimport {connect} from 'react-redux'\r\nimport EnlargeShrink from '../Animations/EnlargeShrink'\r\n\r\nclass FilmDetail extends React.Component{\r\n\r\n  static navigationOptions = ({ navigation }) => {\r\n    const { params } = navigation.state\r\n    // On accède à la fonction shareFilm et au film via les paramètres qu'on a ajouté à la navigation\r\n    if (params.film != undefined && Platform.OS === 'ios'){\r\n      return{\r\n        headerRight: <TouchableOpacity\r\n                        style={styles.share_touchable_headerrightbutton}\r\n                        onPress = {()=> params.shareFilm()}>\r\n                        <Image\r\n                          style={styles.share_image}\r\n                          source={require('../Images/ic_share.png')}\r\n                        />\r\n                      </TouchableOpacity>\r\n      }\r\n    }\r\n  }\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      film : undefined,\r\n      isLoading : true\r\n    }\r\n    // Ne pas oublier de binder la fonction _shareFilm sinon,\r\n    //lorsqu'on va l'appeler depuis le headerRight de la navigation,\r\n    //this.state.film sera undefined et fera planter l'application\r\n    this._shareFilm = this._shareFilm.bind(this)\r\n  }\r\n\r\n  _toggleFavorite(){\r\n    const action = { type: \"TOGGLE_FAVORITE\", value: this.state.film}\r\n    this.props.dispatch(action)\r\n  }\r\n\r\n  componentDidMount(){\r\n    const favoriteFilmIndex = this.props.favoritesFilm.findIndex(item => item.id === this.props.navigation.state.params.idFilm)\r\n    if (favoriteFilmIndex !== -1){ // film déjà dans les fav donc on possède son détail stocké dans notre state global au state de notre component\r\n        this.setState({\r\n          film : this.props.favoritesFilm[favoriteFilmIndex],\r\n          isLoading : false\r\n        }, () => {this._updateNavigationParams()}) // Dès que le film est chargé, on met à jour les paramètres de la navigation\r\n                                                   //pour afficher le bouton de partage\r\n        return\r\n    }\r\n\r\n     //film pas dans les fav on fait appel à l'api pour récupérer le détail\r\n    this.setState({\r\n      isLoading: true\r\n    })\r\n    getFilmDetailFromApi(this.props.navigation.state.params.idFilm).then(data => {\r\n      this.setState({\r\n        film : data,\r\n        isLoading : false\r\n      }, () => {this._updateNavigationParams()})\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    console.log(\"componentDidUpdate:\")\r\n    console.log(this.props.favoritesFilm)\r\n  }\r\n  // Fonction pour faire passer la fonction _shareFilm et le film aux paramètres de la navigation.\r\n  // Ainsi on aura accès à ces données au moment de définir le headerRight\r\n  _updateNavigationParams(){\r\n    this.props.navigation.setParams({\r\n      shareFilm: this._shareFilm,\r\n      film : this.state.film\r\n    })\r\n  }\r\n\r\n  _shareFilm(){\r\n    const { film } = this.state\r\n    Share.share({title: film.title, message: film.overview})\r\n  }\r\n\r\n  _displayFloatingActionButton(){\r\n    const { film } = this.state\r\n    if(film != undefined && Platform.OS === ' android'){ //uniquement sur android lorsque le film est chargé\r\n      return(\r\n        <TouchableOpacity\r\n          style={styles.share_touchable_floatingactionbutton}\r\n          onPress = {()=> this._shareFilm()}>\r\n          <Image\r\n            style={styles.share_image}\r\n            source={require('../Images/ic_share.png')}\r\n          />\r\n        </TouchableOpacity>\r\n      )\r\n    }\r\n  }\r\n\r\n  _displayFavoriteImage(){\r\n    var sourceImage = require('../Images/ic_favorite_border.png')\r\n    var shouldEnlarge = false\r\n    if(this.props.favoritesFilm.findIndex(item => item.id === this.state.film.id) !== -1){\r\n      sourceImage = require('../Images/ic_favorite.png')\r\n      shouldEnlarge = true\r\n    }\r\n    return(\r\n      <EnlargeShrink shouldEnlarge={shouldEnlarge}>\r\n        <Image\r\n          source={sourceImage}\r\n          style={styles.favorite_image}\r\n        />\r\n      </EnlargeShrink>\r\n    )\r\n  }\r\n\r\n\r\n  _displayLoading(){\r\n    if (this.state.isLoading){\r\n      return(\r\n        <View style={styles.loading_container}>\r\n          <ActivityIndicator size='large'/>\r\n        </View>\r\n      )\r\n    }\r\n  }\r\n  _displayFilm(){\r\n    if (this.state.film != undefined){\r\n      return(\r\n        <ScrollView style={styles.scrollview_container}>\r\n          <Image\r\n              source={{uri: getImageFromApi(this.state.film.backdrop_path)}}\r\n              style={styles.image}\r\n          />\r\n          <Text style={styles.title_text}>{this.state.film.title}</Text>\r\n          <TouchableOpacity\r\n            style={styles.favorite_container}\r\n            onPress={()=> this._toggleFavorite()}>\r\n            {this._displayFavoriteImage()}\r\n          </TouchableOpacity>\r\n          <Text style={styles.description_text}>{this.state.film.overview}</Text>\r\n          <Text style={styles.data_text}>Sortie le {moment(new Date(this.state.release_date)).format('DD/MM/YYYY')}</Text>\r\n          <Text style={styles.data_text}>Note: {this.state.film.vote_average}/10</Text>\r\n          <Text style={styles.data_text}>Nombre de votes: {this.state.film.vote_count}</Text>\r\n          <Text style={styles.data_text}>Budget: {numeral(this.state.film.budget).format('0,0[.]00$')} </Text>\r\n          <Text style={styles.data_text}>Genre(s): {this.state.film.genres.map(function(genre){return genre.name;}).join(\" / \")}</Text>\r\n          <Text style={styles.data_text}>Companie(s): {this.state.film.production_companies.map(function(companies){return companies.name;}).join(\" / \")}</Text>\r\n        </ScrollView>\r\n      )\r\n    }\r\n  }\r\n  render(){\r\n    return(\r\n      <View style={styles.main_container}>\r\n        {this._displayLoading()}\r\n        {this._displayFilm()}\r\n        {this._displayFloatingActionButton()}\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  share_touchable_headerrightbutton: {\r\n    marginRight: 8\r\n  },\r\n  share_touchable_floatingactionbutton:{\r\n    position: 'absolute',\r\n    width: 60,\r\n    height: 60,\r\n    right: 30,\r\n    bottom: 30,\r\n    borderRadius: 30,\r\n    backgroundColor: '#e91e63',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  share_image: {\r\n    height: 30,\r\n    width : 30\r\n  },\r\n  favorite_image:{\r\n    flex : 1,\r\n    height : null,\r\n    width  : null\r\n  },\r\n  favorite_container :{\r\n    alignItems: 'center'\r\n  },\r\n\r\n  image:{\r\n    height:180,\r\n    margin: 5\r\n\r\n  },\r\n  title_text:{\r\n    flex : 1,\r\n    flexWrap: 'wrap',\r\n    textAlign : 'center',\r\n    fontWeight : 'bold',\r\n    fontSize : 30,\r\n    color : '#000000',\r\n    margin: 5,\r\n    marginBottom : 10\r\n  },\r\n  description_text:{\r\n    fontStyle : 'italic',\r\n    color : '#666666',\r\n    margin: 5,\r\n    marginBottom : 10\r\n  },\r\n  data_text:{\r\n    marginLeft: 5,\r\n    marginRight: 5,\r\n    marginBottom : 5,\r\n    fontWeight : 'bold'\r\n  },\r\n  scrollview_container:{\r\n    flex :1,\r\n    flexDirection:'column'\r\n  },\r\n  loading_container:{\r\n    position : 'absolute',\r\n    top : 0,\r\n    bottom : 0,\r\n    left: 0,\r\n    right: 0,\r\n    alignItems : 'center',\r\n    justifyContent : 'center'\r\n\r\n  },\r\n\r\n  main_container:{\r\n    flex :1\r\n  }\r\n})\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n    favoritesFilm : state.favoritesFilm\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(FilmDetail)\r\n"]},"metadata":{},"sourceType":"module"}