{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\XPS\\\\Desktop\\\\Projet_Mobile\\\\MoviesAndMe\\\\Components\\\\Search.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport FilmList from \"./FilmList\";\nimport { getFilmsFromApiWithSearchedText } from \"../API/TMDBApi\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\n\nvar Search = function (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  var _super = _createSuper(Search);\n\n  _createClass(Search, [{\n    key: \"_searchFilms\",\n    value: function _searchFilms() {\n      var _this2 = this;\n\n      this.page = 0;\n      this.total_pages = 0;\n      this.setState({\n        films: []\n      }, function () {\n        _this2._loadFilms();\n      });\n    }\n  }, {\n    key: \"_displayLoading\",\n    value: function _displayLoading() {\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.loading_container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 9\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 11\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"_searchTextInputChanged\",\n    value: function _searchTextInputChanged(text) {\n      this.searchedText = text;\n    }\n  }, {\n    key: \"_loadFilms\",\n    value: function _loadFilms() {\n      var _this3 = this;\n\n      if (this.searchedText.length > 0) {\n        this.setState({\n          isLoading: true\n        });\n        getFilmsFromApiWithSearchedText(this.searchedText, this.page + 1).then(function (data) {\n          _this3.page = data.page;\n          _this3.total_pages = data.total_pages;\n\n          _this3.setState({\n            films: [].concat(_toConsumableArray(_this3.state.films), _toConsumableArray(data.results)),\n            isLoading: false\n          });\n        });\n      }\n    }\n  }]);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _super.call(this, props);\n    _this.searchedText = \"\";\n    _this.page = 0;\n    _this.total_pages = 0;\n    _this.state = {\n      films: [],\n      isLoading: false\n    };\n    _this._loadFilms = _this._loadFilms.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(View, {\n        style: styles.main_container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textinput,\n        placeholder: \"Titre du film\",\n        onChangeText: function onChangeText(text) {\n          return _this4._searchTextInputChanged(text);\n        },\n        onSubmitEditing: function onSubmitEditing() {\n          return _this4._searchFilms();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"Recherche\",\n        onPress: function onPress() {\n          return _this4._searchFilms();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }), React.createElement(FilmList, {\n        films: this.state.films,\n        navigation: this.props.navigation,\n        loadFilms: this._loadFilms,\n        page: this.page,\n        total_pages: this.total_pages,\n        favoriteList: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }), this._displayLoading());\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  main_container: {\n    flex: 1\n  },\n  textinput: {\n    marginLeft: 5,\n    marginRight: 5,\n    height: 50,\n    borderColor: '#000000',\n    borderWidth: 1,\n    paddingLeft: 5\n  },\n  loading_container: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 200,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default Search;","map":{"version":3,"sources":["C:/Users/XPS/Desktop/Projet_Mobile/MoviesAndMe/Components/Search.js"],"names":["React","FilmList","getFilmsFromApiWithSearchedText","Search","page","total_pages","setState","films","_loadFilms","state","isLoading","styles","loading_container","text","searchedText","length","then","data","results","props","bind","main_container","textinput","_searchTextInputChanged","_searchFilms","navigation","_displayLoading","Component","StyleSheet","create","flex","marginLeft","marginRight","height","borderColor","borderWidth","paddingLeft","position","left","right","bottom","top","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React from 'react'\r\n//import FilmItem from './FilmItem'\r\nimport FilmList from './FilmList'\r\nimport {getFilmsFromApiWithSearchedText} from '../API/TMDBApi'\r\nimport {StyleSheet, View, TextInput, Button, Text,FlatList, ActivityIndicator } from 'react-native'\r\n\r\n\r\nclass Search extends React.Component{\r\n\r\n\r\n  _searchFilms(){\r\n    this.page = 0\r\n    this.total_pages = 0\r\n    this.setState({\r\n      films:[],\r\n    }, () => {\r\n      this._loadFilms()\r\n    })\r\n  }\r\n  _displayLoading() {\r\n    if(this.state.isLoading){\r\n      return (\r\n        <View style={styles.loading_container}>\r\n          <ActivityIndicator size='large'/>\r\n        </View>\r\n      )\r\n    }\r\n  }\r\n  _searchTextInputChanged(text) {\r\n    this.searchedText=text\r\n  }\r\n  _loadFilms() {\r\n    if(this.searchedText.length >0){\r\n      this.setState({isLoading : true})\r\n      getFilmsFromApiWithSearchedText(this.searchedText,this.page+1).then(data => {\r\n        this.page = data.page\r\n        this.total_pages = data.total_pages\r\n        this.setState({\r\n          films : [...this.state.films, ...data.results],\r\n          isLoading : false\r\n        })\r\n      })\r\n    }\r\n  }\r\n  constructor(props){\r\n    super(props)\r\n    this.searchedText= \"\"\r\n    this.page=0\r\n    this.total_pages=0\r\n    this.state = {\r\n      films : [],\r\n      isLoading : false\r\n    }\r\n    this._loadFilms = this._loadFilms.bind(this)\r\n  }\r\n  render(){\r\n    return (\r\n      <View style={styles.main_container}>\r\n        <TextInput style={styles.textinput}\r\n          placeholder='Titre du film'\r\n          onChangeText={(text)=> this._searchTextInputChanged(text)}\r\n          onSubmitEditing ={()=> this._searchFilms()}\r\n        />\r\n        <Button title='Recherche' onPress={() => this._searchFilms()}/>\r\n        <FilmList\r\n          films={this.state.films}\r\n          navigation={this.props.navigation}\r\n          loadFilms={this._loadFilms}\r\n          page={this.page}\r\n          total_pages={this.total_pages}\r\n          favoriteList={false}\r\n        />\r\n        {this._displayLoading()}\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  main_container: {\r\n    flex: 1\r\n  },\r\n  textinput: {\r\n    marginLeft: 5,\r\n    marginRight: 5,\r\n    height: 50,\r\n    borderColor: '#000000',\r\n    borderWidth: 1,\r\n    paddingLeft: 5\r\n  },\r\n  loading_container: {\r\n    position : 'absolute',\r\n    left : 0,\r\n    right : 0,\r\n    bottom : 0,\r\n    top : 200,\r\n    justifyContent : 'center',\r\n    alignItems : 'center'\r\n  }\r\n})\r\n\r\nexport default Search\r\n"]},"metadata":{},"sourceType":"module"}